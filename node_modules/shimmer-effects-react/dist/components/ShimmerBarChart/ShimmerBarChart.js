import { __makeTemplateObject } from "tslib";
import React from 'react';
import styled, { css } from 'styled-components';
import ShimmerDiv from '../ShimmerDiv/ShimmerDiv';
function getRandomInt(min, max) {
    min = Math.ceil(min); // Round up the minimum value
    max = Math.floor(max); // Round down the maximum value
    return Math.floor(Math.random() * (max - min + 1)) + min; // Generate the random integer
}
function gradientColors(props) {
    if (props.mode === "custom") {
        return [props.from, props.via, props.to];
    }
    else {
        return ["", "", ""];
    }
}
export default function ShimmerBarChart(props) {
    var _a = gradientColors(props), from = _a[0], via = _a[1], to = _a[2];
    return (React.createElement(React.Fragment, null,
        (props.loading && !props.children)
            && React.createElement(BarChart, { className: "shimmer-bar-chart ".concat(props.className ? props.className : "") },
                React.createElement(BarChartYAxis, { className: "shimmer-bar-chart-y-axis" },
                    React.createElement(BarChartYAxisLine, { className: "shimmer-bar-chart-y-axis-line", chartType: props.chartType, mode: props.mode, from: "", via: "", to: "", lineColor: (props.mode == "custom") ? props.lineColor : "" })),
                React.createElement(BarArea, { className: "shimmer-bar-area" }, Array.from({ length: 11 }).map(function (_, index) {
                    var height = props.chartType == "linear" ? (index == 0) ? "".concat(5, "%") : "".concat(index * 10, "%") : "".concat(getRandomInt(1, 100), "%");
                    return React.createElement(Bar, { className: "shimmer-bar-".concat(index), key: index, mode: props.mode, height: height, width: props.barWidth, from: from, via: via, to: to });
                })),
                React.createElement(BarChartXAxis, { className: "shimmer-bar-chart-x-axis-line", chartType: props.chartType, mode: props.mode, from: "", via: "", to: "", lineColor: (props.mode == "custom") ? props.lineColor : "" })),
        (props.loading && props.children)
            ? React.createElement(BarChart, { className: "shimmer-bar-chart" },
                React.createElement(BarChartYAxis, { className: "shimmer-bar-chart-y-axis" },
                    React.createElement(BarChartYAxisLine, { className: "shimmer-bar-chart-y-axis-line", chartType: props.chartType, mode: props.mode, from: "", via: "", to: "", lineColor: (props.mode == "custom") ? props.lineColor : "" })),
                React.createElement(BarArea, { className: "shimmer-bar-area" }, Array.from({ length: 11 }).map(function (_, index) {
                    var height = props.chartType == "linear" ? (index == 0) ? "".concat(5, "%") : "".concat(index * 10, "%") : "".concat(getRandomInt(1, 100), "%");
                    return React.createElement(Bar, { className: "shimmer-bar-".concat(index), key: index, mode: props.mode, height: height, width: props.barWidth, from: from, via: via, to: to });
                })),
                React.createElement(BarChartXAxis, { className: "shimmer-bar-chart-x-axis-line", chartType: props.chartType, mode: props.mode, from: "", via: "", to: "", lineColor: (props.mode == "custom") ? props.lineColor : "" }))
            : props.children));
}
ShimmerBarChart.defaultProps = {
    barWidth: "7%",
    loading: true
};
var BarChart = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    display: flex;\n    flex-wrap: wrap;\n    height: 100%;\n    width: 100%;\n"], ["\n    display: flex;\n    flex-wrap: wrap;\n    height: 100%;\n    width: 100%;\n"])));
var BarChartYAxis = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    background-color: red;\n"], ["\n    background-color: red;\n"])));
var BarChartYAxisLine = styled.div(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n    ", "\n\n    ", "\n\n    ", "\n\n    width: 2px;\n    height: 100%;\n"], ["\n    ", "\n\n    ", "\n\n    ", "\n\n    width: 2px;\n    height: 100%;\n"])), function (p) { return (p.mode == "light") && css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["        \n        background-color: #cbd5e1;\n    "], ["        \n        background-color: #cbd5e1;\n    "]))); }, function (p) { return (p.mode == "dark") && css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["        \n        background-color: #6b7280;\n    "], ["        \n        background-color: #6b7280;\n    "]))); }, function (p) { return (p.mode == "custom") && css(templateObject_5 || (templateObject_5 = __makeTemplateObject(["        \n        background-color: ", ";\n    "], ["        \n        background-color: ", ";\n    "])), p.lineColor); });
var BarChartXAxis = styled.div(templateObject_10 || (templateObject_10 = __makeTemplateObject(["\n    ", "\n\n    ", "\n\n    ", "\n\n    height: 2px;\n    width: 100%;\n    flex-basis: 100%;\n\n"], ["\n    ", "\n\n    ", "\n\n    ", "\n\n    height: 2px;\n    width: 100%;\n    flex-basis: 100%;\n\n"])), function (p) { return (p.mode == "light") && css(templateObject_7 || (templateObject_7 = __makeTemplateObject(["        \n        background-color: #cbd5e1;\n    "], ["        \n        background-color: #cbd5e1;\n    "]))); }, function (p) { return (p.mode == "dark") && css(templateObject_8 || (templateObject_8 = __makeTemplateObject(["        \n        background-color: #6b7280;\n    "], ["        \n        background-color: #6b7280;\n    "]))); }, function (p) { return (p.mode == "custom") && css(templateObject_9 || (templateObject_9 = __makeTemplateObject(["        \n        background-color: ", ";\n    "], ["        \n        background-color: ", ";\n    "])), p.lineColor); });
var BarArea = styled.div(templateObject_11 || (templateObject_11 = __makeTemplateObject(["\n    display: flex;\n    align-items: end;\n    height: 100%;\n    flex-basis: 99%;\n    justify-content: space-around;\n"], ["\n    display: flex;\n    align-items: end;\n    height: 100%;\n    flex-basis: 99%;\n    justify-content: space-around;\n"])));
var Bar = styled(ShimmerDiv)(templateObject_12 || (templateObject_12 = __makeTemplateObject(["\n"], ["\n"])));
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12;
//# sourceMappingURL=ShimmerBarChart.js.map