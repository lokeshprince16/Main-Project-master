import { __makeTemplateObject } from "tslib";
import React from "react";
import ShimmerDiv from "../ShimmerDiv/ShimmerDiv";
import styled, { css } from "styled-components";
import ShimmerTitle from "../ShimmerTitle/ShimmerTitle";
import ShimmerText from "../ShimmerText/ShimmerText";
import ShimmerButton from "../ShimmerButton/ShimmerButton";
function gradientColors(props) {
    if (props.mode === "custom") {
        return [props.from, props.via, props.to];
    }
    else {
        return ["", "", ""];
    }
}
export default function ShimmerContentBlock(props) {
    var _a = gradientColors(props), from = _a[0], via = _a[1], to = _a[2];
    return (React.createElement("div", { className: "shimmer-content-block-main-div" },
        props.loading &&
            !props.children &&
            Array.from({ length: props.items }).map(function (_, index) {
                return (React.createElement(ShimmerContent, { className: props.className, key: index, mode: props.mode, rounded: props.rounded, from: from, itemsGap: props.itemsGap },
                    React.createElement(ShimmerDiv, { className: "shimmer-content-block-thumbnail", mode: props.mode, height: props.thumbnailHeight, width: props.thumbnailWidth, border: props.thumbnailBorder, rounded: props.thumbnailRounded, from: from, via: via, to: to }),
                    React.createElement(ShimmerContentDetails, { className: "shimmer-content-block-details", contentDetailsPosition: props.contentDetailsPosition, thumbnailWidth: props.thumbnailWidth },
                        React.createElement(ShimmerTitle, { className: "shimmer-content-block-details-title-div", mode: props.mode, width: 20, height: 20, line: 1, from: from, via: via, to: to }),
                        React.createElement(ShimmerText, { className: "shimmer-content-block-details-text-div", mode: props.mode, line: props.contentDetailTextLines, gap: 8, from: from, via: via, to: to }),
                        React.createElement(ShimmerButton, { className: "shimmer-content-block-details-button", size: "sm", mode: props.mode, rounded: 0.4, from: from, via: via, to: to }))));
            }),
        props.loading && props.children
            ? Array.from({ length: props.items }).map(function (_, index) {
                return (React.createElement(ShimmerContent, { className: props.className, key: index, mode: props.mode, rounded: props.rounded, from: from },
                    React.createElement(ShimmerDiv, { className: "shimmer-content-block-thumbnail", mode: props.mode, height: props.thumbnailHeight, width: props.thumbnailWidth, border: props.thumbnailBorder, rounded: props.thumbnailRounded, from: from, via: via, to: to }),
                    React.createElement(ShimmerContentDetails, { className: "shimmer-content-block-details", contentDetailsPosition: props.contentDetailsPosition, thumbnailWidth: props.thumbnailWidth },
                        React.createElement(ShimmerTitle, { className: "shimmer-content-block-details-title-div", mode: props.mode, width: 20, height: 20, line: 1, from: from, via: via, to: to }),
                        React.createElement(ShimmerText, { className: "shimmer-content-block-details-text-div", mode: props.mode, line: props.contentDetailTextLines, gap: 8, from: from, via: via, to: to }),
                        React.createElement(ShimmerButton, { className: "shimmer-content-block-details-button", size: "sm", mode: props.mode, rounded: 0.4, from: from, via: via, to: to }))));
            })
            : props.children));
}
;
ShimmerContentBlock.defaultProps = {
    loading: true,
    rounded: 1,
    items: 1,
    itemsGap: 20,
    thumbnailHeight: 200,
    thumbnailWidth: 200,
    thumbnailBorder: 1,
    thumbnailRounded: 1,
    contentDetailsPosition: "start",
    contentDetailTextLines: 6,
    className: "shimmer-content-block"
};
var ShimmerContent = styled.div(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  display: flex;\n  padding: 2em;\n  width: 100%;\n  ", "\n\n  ", "\n\n  ", "\n\n    ", "  \n\n    ", "\n"], ["\n  display: flex;\n  padding: 2em;\n  width: 100%;\n  ", "\n\n  ", "\n\n  ", "\n\n    ", "  \n\n    ", "\n"])), function (p) { return css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    border-radius: ", "em;\n  "], ["\n    border-radius: ", "em;\n  "])), p.rounded); }, function (p) { return css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    margin-bottom: ", "px;\n  "], ["\n    margin-bottom: ", "px;\n  "])), p.itemsGap); }, function (p) {
    return p.mode == "light" && css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n      border: 1px solid #cbd5e1;\n    "], ["\n      border: 1px solid #cbd5e1;\n    "])));
}, function (p) {
    return p.mode == "dark" && css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n      border: 1px solid #374151;\n    "], ["\n      border: 1px solid #374151;\n    "])));
}, function (p) {
    return p.mode == "custom" && css(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n      border: 1px solid ", ";\n    "], ["\n      border: 1px solid ", ";\n    "])), p.from);
});
var ShimmerContentDetails = styled.div(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n  display: grid;\n  gap: 1em;\n  padding: 1em;\n\n  ", "\n\n  ", "\n"], ["\n  display: grid;\n  gap: 1em;\n  padding: 1em;\n\n  ", "\n\n  ", "\n"])), function (p) { return css(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n    width: calc(100% - ", "px);\n  "], ["\n    width: calc(100% - ", "px);\n  "])), p.thumbnailWidth); }, function (p) { return css(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n    align-self: ", ";\n  "], ["\n    align-self: ", ";\n  "])), p.contentDetailsPosition); });
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9;
//# sourceMappingURL=ShimmerContentBlock.js.map