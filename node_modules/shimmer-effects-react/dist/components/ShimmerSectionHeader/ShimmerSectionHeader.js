import React from 'react';
import ShimmerTitle from '../ShimmerTitle/ShimmerTitle';
import ShimmerText from '../ShimmerText/ShimmerText';
function gradientColors(props) {
    if (props.mode === "custom") {
        return [props.from, props.via, props.to];
    }
    else {
        return ["", "", ""];
    }
}
export default function ShimmerSectionHeader(props) {
    var _a = gradientColors(props), from = _a[0], via = _a[1], to = _a[2];
    return (React.createElement("div", { className: props.className },
        (props.loading && !props.children) &&
            React.createElement(React.Fragment, null,
                Array.from({ length: props.titleLine }).map(function (_, index) {
                    var _a;
                    return React.createElement(ShimmerTitle, { className: "shimmer-section-header-title-div", key: index, mode: props.mode, center: props.center, line: 1, gap: props.titleGap, border: props.titleBorder, height: props.titleHeight, width: (_a = props.titleWidth) === null || _a === void 0 ? void 0 : _a[index], rounded: props.titleRounded, from: from, via: via, to: to });
                }),
                Array.from({ length: props.subtitleLine }).map(function (_, index) {
                    var _a;
                    return React.createElement(ShimmerText, { className: "shimmer-section-header-text-div", key: index, mode: props.mode, center: props.center, line: 1, gap: props.subtitleGap, border: props.subtitleBorder, height: props.subtitleHeight, width: (_a = props.subtitleWidth) === null || _a === void 0 ? void 0 : _a[index], rounded: props.subtitleRounded, from: from, via: via, to: to });
                })),
        (props.loading && props.children) ?
            React.createElement(React.Fragment, null,
                Array.from({ length: props.titleLine }).map(function (_, index) {
                    var _a;
                    return React.createElement(ShimmerTitle, { className: "shimmer-section-header-title-div", key: index, mode: props.mode, center: props.center, line: 1, gap: props.titleGap, border: props.titleBorder, height: props.titleHeight, width: (_a = props.titleWidth) === null || _a === void 0 ? void 0 : _a[index], rounded: props.titleRounded, from: from, via: via, to: to });
                }),
                Array.from({ length: props.subtitleLine }).map(function (_, index) {
                    var _a;
                    return React.createElement(ShimmerText, { className: "shimmer-section-header-text-div", key: index, mode: props.mode, center: props.center, line: 1, gap: props.subtitleGap, border: props.subtitleBorder, height: props.subtitleHeight, width: (_a = props.subtitleWidth) === null || _a === void 0 ? void 0 : _a[index], rounded: props.subtitleRounded, from: from, via: via, to: to });
                }))
            :
                props.children));
}
ShimmerSectionHeader.defaultProps = {
    titleLine: 1,
    subtitleLine: 3,
    titleHeight: 16,
    subtitleHeight: 8,
    titleWidth: [40],
    subtitleWidth: [80, 70, 60],
    titleBorder: 1,
    subtitleBorder: 1,
    titleRounded: 1,
    subtitleRounded: 1,
    titleGap: 8,
    subtitleGap: 6,
    loading: true,
    center: false,
    className: 'shimmer-section-header'
};
//# sourceMappingURL=ShimmerSectionHeader.js.map